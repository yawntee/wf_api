// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"
	"wf_api/internal/handler/game"
	"wf_api/internal/handler/game/shop"
	"wf_api/internal/handler/token"
	"wf_api/internal/handler/users"
	"wf_api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/token",
				Handler: token.RenewHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/users/login",
				Handler: users.LoginHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/game/login",
				Handler: game.LoginGameHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/game/login/send",
				Handler: game.SendLoginGameOtpHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/game/login/otp",
				Handler: game.OtpLoginGameHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/game/user/list",
				Handler: game.GameUserListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/game/user/del",
				Handler: game.RemoveGameUserHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/game/task",
				Handler: game.GetTaskStatusHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/game/shop",
				Handler: shop.ShopListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/game/shop/buy",
				Handler: shop.BuyShopItemHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)
}
